@model DanzFloor.Web.Models.ViewModels.TicketViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card z-depth-4">
    <div class="card-header">
        <h2>
            Nuevo Ticket
        </h2>
    </div>

    <div class="card-body card-padding">
        @using (Html.BeginForm("Create", "Ticket", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.ArchivosId)

            <div class="card-body card-padding">
                <div class="row">
                    <div class="col-md-12 form-group fg-float m-t-25 m-b-15">
                        <div class="fg-line">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control input-sm" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            <label class="fg-label">Asunto</label>
                        </div>
                    </div>
                    <div class="col-md-12 form-group m-b-5">
                        <label class="nombre-campo">Tipo de ticket</label>
                        <div class="select fg-line">
                            <select id="TipoTicketId" name="TipoTicketId" class="chosen TipoTicketId">
                                <option value="@Guid.Empty">Seleccione...</option>
                                @foreach (var item in Model.TiposTicket)
                                {
                                    <option @(item.Id == Model.TipoTicketId ? "selected='selected'" : "") value="@item.Id">@item.Nombre</option>
                                }
                            </select>
                        </div>
                        @Html.ValidationMessageFor(model => model.TipoTicketId, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div class="col-md-6 form-group m-b-5">
                        <label class="nombre-campo">Area</label>
                        <div class="select fg-line">
                            <select id="AreaId" name="AreaId" class="chosen AreaId">
                                <option value="@Guid.Empty">Seleccione...</option>
                                @foreach (var area in Model.Areas)
                                {
                                    <option @(area.Id == Model.AreaId ? "selected='selected'" : "") value="@area.Id">@area.Nombre</option>
                                }

                            </select>
                        </div>
                        @Html.ValidationMessageFor(model => model.AreaId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 form-group m-b-5">
                        <label class="nombre-campo">Subtipo de ticket</label>
                        <div class="select fg-line">
                            <select id="SubtipoTicketId" name="SubtipoTicketId" class="chosen" subtipo-ticket>
                                <option value="@Guid.Empty">Seleccione...</option>
                                @foreach (var item in Model.SubtiposTicket)
                                {
                                    <option @(item.Id == Model.SubtipoTicketId ? "selected='selected'" : "") value="@item.Id">@item.Nombre</option>
                                }

                            </select>
                        </div>
                        @Html.ValidationMessageFor(model => model.SubtipoTicketId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 form-group m-b-5">
                        <label class="nombre-campo">Responsable</label>
                        <div class="select fg-line">
                            <select id="ResponsableId" name="ResponsableId" class="chosen ResponsableId" responsable-ticket>
                                <option value="@Guid.Empty"></option>
                                @foreach (var item in Model.Responsables)
                                {
                                    <option @(item.Id == Model.ResponsableId ? "selected='selected'" : "") value="@item.Id">@item.NombreYApellido</option>
                                }
                            </select>
                        </div>
                        @Html.ValidationMessageFor(model => model.ResponsableId, "", new { @class = "text-danger" })
                    </div>
                </div>
                    <div class="row">
                        <div class="col-md-6 form-group m-b-5">
                            <label class="nombre-campo">Cliente</label>
                            <div class="select fg-line">
                                <select id="ClienteId" name="ClienteId" class="chosen ClienteId">
                                    <option value="@Guid.Empty">Seleccione...</option>
                                    @foreach (var item in Model.Clientes)
                                    {
                                        <option @(item.Id == Model.ClienteId ? "selected='selected'" : "") value="@item.Id">@item.NombreYRazonSocial</option>
                                    }
                                </select>
                            </div>
                            @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
                        </div>
                </div>
                <div class="row">
                    <div class="col-md-6 form-group m-b-5">
                        <label class="nombre-campo">Usuario Cliente</label>
                        <div class="select fg-line">
                            <select id="UsuarioClienteId" name="UsuarioClienteId" class="chosen" usuario-cliente>
                                <option value="@Guid.Empty">Seleccione...</option>
                                @foreach (var usuarioCliente in Model.UsuariosClientes)
                                {
                                    <option @(usuarioCliente.Id == Model.UsuarioClienteId ? "selected='selected'" : "") value="@usuarioCliente.Id">@usuarioCliente.NombreYCliente</option>
                                }
                            </select>
                        </div>
                        @Html.ValidationMessageFor(model => model.UsuarioClienteId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 form-group m-b-5">
                        <label class="nombre-campo">Punto de Entrega</label>
                        <div class="select fg-line">
                            <select id="PuntoEntregaId" name="PuntoEntregaId" class="chosen" punto-entrega-select>
                                <option value="@Guid.Empty">Seleccione...</option>
                                @foreach (var puntoEntrega in Model.PuntosEntrega)
                                {
                                    <option @(puntoEntrega.Id == Model.PuntoEntregaId ? "selected='selected'" : "") value="@puntoEntrega.Id">@puntoEntrega.NombreYZona</option>
                                }
                                @Html.ValidationMessageFor(model => model.PuntoEntregaId, "", new { @class = "text-danger" })
                            </select>
                        </div>
                        @Html.ValidationMessageFor(model => model.PuntoEntregaId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 form-group m-b-5">
                        <label class="nombre-campo">Pedido</label>
                        <div class="select fg-line">
                            <select id="PedidoId" name="PedidoId" class="chosen" pedido-ticket>
                                <option value="@Guid.Empty">Seleccione...</option>
                                @foreach (var pedido in Model.Pedidos)
                                {
                                    <option @(pedido.Id == Model.PedidoId ? "selected='selected'" : "") value="@pedido.Id">@pedido.NombreCompuesto</option>
                                }
                                @Html.ValidationMessageFor(model => model.PedidoId, "", new { @class = "text-danger" })
                            </select>
                        </div>
                        @Html.ValidationMessageFor(model => model.PedidoId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 form-group m-b-5">
                        <label class="nombre-campo">Artículo</label>
                        <div class="select fg-line">
                            <select id="ArticulosId" name="ArticulosId" multiple="multiple" class="chosen ArticuloId" articulo-ticket>
                                @foreach (var articulo in Model.ListaArticulos)
                                {
                                    <option @(Model.ArticulosId.Contains(articulo.Id) ? "selected='selected'" : "") value="@articulo.Id">@articulo.Nombre</option>
                                }

                            </select>
                        </div>
                        @Html.ValidationMessageFor(model => model.ArticulosId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 m-t-25">
                        <div class="form-group fg-float">
                            <div class="fg-line">
                                @Html.EditorFor(model => model.MensajeActividad, new { htmlAttributes = new { @class = "form-control auto-size input-sm" } })
                                @Html.ValidationMessageFor(model => model.MensajeActividad, "", new { @class = "text-danger" })
                                <label class="fg-label">Detalle</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <button type="submit" class="btn btn-float bgm-blue m-btn waves-effect waves-circle waves-float"><i class="zmdi zmdi-check"></i></button>
        }
    </div>
</div>
<script src="~/Scripts/TicketController.js"></script>

@Html.Partial("_FileComponent", Model.FileComponentViewModel)

