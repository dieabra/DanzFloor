@model DanzFloor.Web.Models.ViewModels.TipoTicketViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card z-depth-4">
    <div class="card-header">
        <ul class="actions">
            <li>
                <a id="deleteArea">
                    <i class="zmdi zmdi-delete" style="cursor: pointer;"></i>
                </a>
            </li>
        </ul>
        <h2>
            Tipo de ticket
        </h2>
    </div>

    <div class="card-body card-padding">
        @using (Html.BeginForm("Edit", "TipoTicket", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="col-md-6 form-group fg-float m-t-25 m-b-0">
                    <div class="fg-line">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.Nombre, new { @class = "fg-label" })
                    </div>
                </div>
                <div class="col-md-6 form-group  m-b-5">
                    @Html.LabelFor(model => model.AreaId, htmlAttributes: new { @class = "nombre-campo" })
                    <div class="select fg-line">
                        <select id="AreaId" name="AreaId" class="form-control">
                            <option>Seleccione...</option>
                            @foreach (var area in Model.Areas)
                            {
                                if (Model.AreaId != null && Model.AreaId == area.Id)
                                {
                                    <option selected="selected" value="@(area.Id)">@area.Nombre</option>
                                }
                                else
                                {
                                    <option value="@(area.Id)">@area.Nombre</option>
                                }
                            }
                        </select>
                    </div>
                    @Html.ValidationMessageFor(model => model.AreaId, "", new { @class = "text-danger" })
                </div>
            </div>
            <button type="submit" class="btn btn-float bgm-blue m-btn waves-effect waves-circle waves-float"><i class="zmdi zmdi-check"></i></button>
        }
    </div>
</div>
<script type="text/javascript">
    var AreaId = '@(Model.Id)';

    $('#deleteArea').click(function () {
        swal({
            title: "¿Está seguro de que desea eliminar el área?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Sí",
            cancelButtonText: "No",
            closeOnConfirm: false
        }, function () {
            $.ajax({
                dataType: 'json',
                type: 'GET',
                url: window.location.origin + '/TipoTicket/delete/' + AreaId,
                success: function (result) {
                    swal("¡Eliminado!", "El área fue eliminada.", "success");
                    window.location.assign(window.location.origin + "/Area");
                },
                error: function (error) {
                    swal("¡Error!", "El área no fue eliminada.", "error");
                }
            });
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}