@using DanzFloor.Web.ViewModels
@model RecuperarPasswordViewModel

@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_LayoutBaseFront.cshtml";
}

<div class="bg-login relative">
    <div class="center-center width100">
        <div class="container-fluid">
            <div class="row">
                <div class="col-xs-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <img src="~/assets/SdP/Frontend/img/id-sapore.png" class="img-logo-login" alt="Logo Sapore Di Pane">

                            <h3 class="text-center clearmargin">RENOVAR CONTRASEÑA</h3>
                            @if (!string.IsNullOrWhiteSpace(Model.Error))
                            {
                                <div class="validation-summary-errors text-danger margintop30 marginbottom-40">
                                    <ul>
                                        <li>@Model.Error</li>
                                    </ul>
                                </div>
                            }
                            

                            @if (ViewBag.Success == true)
                            {
                                <div class="text-center">
                                    <p class="font20 margintop20 brandon">Su contraseña ha sido modificada.</p>
                                    <a href="/Cuenta/Login" class="btn btn-primary margintop30">Ir al inicio</a>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-default margintop30">La contraseña debe tener al menos 6 caracteres que incluya una minúscula, una mayúscula, un número y un caracter (Ejemplos: !, #, -).</div>
                                using (Html.BeginForm("RecuperarPassword", "Cuenta", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-material", role = "form" }))
                                {
                                    @Html.HiddenFor(m => m.Token);
                                    @Html.HiddenFor(m => m.UsuarioId);

                                    <div class="form-group label-floating is-fixed">
                                        <label for="username">Nueva Contraseña</label>
                                        @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @type = "password", placeholder = "Ingrese su nueva contraseña" })
                                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group label-floating is-fixed">
                                        <label for="username">Confirmar nueva Contraseña</label>
                                        @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", @type = "password", placeholder = "Confirme su nueva contraseña" })
                                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-login-actions text-center margintop50">
                                        <input type="submit" class="btn btn-primary" value="Aceptar">
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





<div class="login-content" style="display:none">

    <div id="l-login" class="lc-block toggled">
        <div class="lcb-form">
            @if (ViewBag.Success != true)
            {
            using (Html.BeginForm("RecuperarPassword", "Cuenta", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                        <h3>RENOVAR CONTRASEÑA</h3>
                        <h4>Ingrese una nueva contraseña</h4>
                if (!string.IsNullOrWhiteSpace(Model.Error))
                {
                            <br />
                            <div class="alert alert-danger">@Model.Error</div>
                }
            <br />
            <div class="input-group col-md-12 divPass has-error">
                <label class="control-label">Nueva Contraseña</label>
                <div class="col-md-12">
                    @Html.TextBoxFor(m => m.Password, new { @class = "form-control txtPass", @type = "password" })
                </div>
            </div>

            <br />
            <div class="input-group col-md-12 divPassConfirm has-error">
                <label class="control-label">Confirmar nueva Contraseña</label>
                <div class="col-md-12">
                    @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control txtPassConfirm", @type = "password" })
                </div>
            </div>

            @Html.HiddenFor(m => m.Token);
            @Html.HiddenFor(m => m.UsuarioId);

            <button type="submit" class="btnRecuperarPass btn btn-login btn-info btn-float"><i class="zmdi zmdi-arrow-forward"></i></button>
}
            }
            else
            {
                <div class="alert alert-success">Su contraseña ha sido modificada</div>
                <div class="col-md-12" style="text-align:center">
                    <a class="btn btn-default waves-button" href="/Home/Index">Acceder</a>
                </div>
            }
        </div>
    </div>
</div>



<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var passOK = false;
        var confirmPassOK = false;

        $(".txtPass").on('input', function () {
            $('.btnRecuperarPass').prop('disabled', false);
            $(".divPass").removeClass("has-error");
            $(".divPass").removeClass("has-success");
            if ($(".txtPass").val() == null || $(".txtPass").val() == '') {
                $(".divPass").addClass("has-error");
                $('.btnRecuperarPass').prop('disabled', true);
            }
            else{
                $(".divPass").addClass("has-success");
                passOK = true;
            }
            
            if (!confirmPassOK || !passOK)
                $('.btnRecuperarPass').prop('disabled', true);
        });

        $(".txtPassConfirm").on('input', function () {
            $('.btnRecuperarPass').prop('disabled', false);
            $(".divPassConfirm").removeClass("has-error");
            $(".divPassConfirm").removeClass("has-success");
            if ($(".txtPassConfirm").val() == null || $(".txtPassConfirm").val() == '') {
                $(".divPassConfirm").addClass("has-error");
                $('.btnRecuperarPass').prop('disabled', true);
            }
            else {
                $(".divPassConfirm").addClass("has-success");
                confirmPassOK = true;
            }

            if (!confirmPassOK || !passOK)
                $('.btnRecuperarPass').prop('disabled', true);
        });


    });
</script>