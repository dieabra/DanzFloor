@model DanzFloor.Web.Models.ViewModels.DestacadoViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card z-depth-4">
    <div class="card-header">
        <h2>
            Nueva Destacado
        </h2>
    </div>

    <div class="card-body card-padding">
        @using (Html.BeginForm("Create", "Destacado", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.ArchivosId)

            <div class="row">
                <div class="col-md-6 form-group fg-float m-t-25 m-b-0">
                    <div class="fg-line">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.Nombre, new { @class = "fg-label" })
                    </div>
                </div>
                <div class="col-md-6 form-group fg-float m-t-25 m-b-0">
                    <div class="fg-line">
                        @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.Titulo, new { @class = "fg-label" })
                    </div>
                </div>
                <div class="col-sm-12 m-t-25">
                    <div class="form-group fg-float">
                        <div class="fg-line">
                            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control auto-size input-sm" } })
                            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                            <label class="fg-label">Descripción</label>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 form-group fg-float m-t-25 m-b-0">
                    <div class="fg-line">
                        @Html.EditorFor(model => model.NombreLink, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.NombreLink, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.NombreLink, new { @class = "fg-label" })
                    </div>
                </div>
                <div class="col-md-6 form-group fg-float m-t-25 m-b-0">
                    <div class="fg-line">
                        @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.Link, new { @class = "fg-label" })
                    </div>
                </div>

                <div class="col-sm-6 m-t-20">
                    <label class="nombre-campo">Tags Cliente</label>
                    <div class="form-group fg-line">
                        <select class="chosen" id="TagsClienteVisualizaId" multiple="multiple" name="TagsClienteVisualizaId" style="display: none;">
                            @foreach (var item in Model.TagsCliente)
                            {
                                if (Model.TagsClienteVisualizaId != null && Model.TagsClienteVisualizaId.Contains(item.Id))
                                {
                                    <option value="@item.Id" selected="selected">@item.Nombre</option>
                                }
                                else
                                {
                                    <option value="@item.Id">@item.Nombre</option>
                                }
                            }
                        </select>
                    </div>
                </div>

                <div class="col-sm-6 m-t-20">
                    <label class="nombre-campo">Tags Cliente</label>
                    <div class="form-group fg-line">
                        <select class="chosen" id="TagsClienteNoVisualizaId" multiple="multiple" name="TagsClienteNoVisualizaId" style="display: none;">
                            @foreach (var item in Model.TagsCliente)
                            {
                                if (Model.TagsClienteNoVisualizaId != null && Model.TagsClienteNoVisualizaId.Contains(item.Id))
                                {
                                    <option value="@item.Id" selected="selected">@item.Nombre</option>
                                }
                                else
                                {
                                    <option value="@item.Id">@item.Nombre</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="col-sm-6 m-b-25 m-t-25">
                    <p  class="nombre-campo">Fecha de Publicación</p>
                    <div class="fg-line dtp-container">
                        <input type="text" id="FechaPublicacion" name="FechaPublicacion" class="form-control date-picker">
                        @Html.ValidationMessageFor(model => model.FechaPublicacion, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-12 m-b-20">
                    <div class="toggle-switch toggle-switch-demo" data-ts-color="blue">
                        <label for="Habilitado" class="ts-label">Habilitado</label>
                        <input @(Model.Habilitado ? "checked='checked'" : "") data-val="true"
                               data-val-required="The Es administrador field is required."
                               id="Habilitado" name="Habilitado" type="checkbox" value="true" hidden="hidden" chk-alerta>
                        <label for="Habilitado" class="ts-helper"></label>
                    </div>
                </div>
            </div>

                <button type="submit" class="btn btn-float bgm-blue m-btn waves-effect waves-circle waves-float"><i class="zmdi zmdi-check"></i></button>
        }
    </div>
</div>

@Html.Partial("_FileComponent", Model.FileComponentViewModel)