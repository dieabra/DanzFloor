@model DanzFloor.Web.Models.ViewModels.ArticuloViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card z-depth-4">
    <div class="card-header">
        <h2>
            Artículo
        </h2>
    </div>

    <div class="card-body card-padding">
        @using (Html.BeginForm("Edit", "Articulo", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.Nombre)

            <div class="row">
                <div class="col-md-12 form-group fg-float m-t-25">
                    <div class="fg-line">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control input-sm",  @disabled = "disabled"} })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.Nombre, new { @class = "fg-label" })
                    </div>
                </div>
                <div class="col-md-6 form-group fg-float m-t-0 m-b-0">
                    <label>Producto</label>
                    <div class="fg-line">
                        <select class="chosen" id="ProductoSelected" name="ProductoSelected" style="display: none;">
                            <option>Seleccione...</option>
                            @if (Model.ListaProductos != null)
                            {
                                foreach (var item in Model.ListaProductos)
                                {
                                    if (Model.Producto != null && Model.Producto.Id == item.Id)
                                    {
                                        <option value="@item.Id" selected="selected">@item.Nombre</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Id">@item.Nombre</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-6 form-group fg-float m-t-25 m-b-0">
                    <div class="fg-line">
                        @Html.EditorFor(model => model.CantidadUnidades, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.CantidadUnidades, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.CantidadUnidades, new { @class = "fg-label" })
                    </div>
                </div>
            </div>

            <button type="submit" class="btn btn-float bgm-blue m-btn waves-effect waves-circle waves-float"><i class="zmdi zmdi-check"></i></button>
        }
    </div>

</div>

<div>

</div>

<script type="text/javascript">
    var articuloId = '@(Model.Id)';

    $('#deleteArticulo').click(function () {
        swal({
            title: "¿Está seguro de que desea eliminar el Artículo?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Sí",
            cancelButtonText: "No",
            closeOnConfirm: false
        }, function () {
            $.ajax({
                dataType: 'json',
                type: 'GET',
                url: window.location.origin + '/articulo/delete/' + articuloId,
                success: function (result) {
                    swal("¡Eliminado!", "El Artículo fue eliminado.", "success");
                    window.location.assign(window.location.origin + "/articulo");
                },
                error: function (error) {
                    swal("¡Error!", "El Artículo no fue eliminado.", "error");
                }
            });
        });
    });
</script>