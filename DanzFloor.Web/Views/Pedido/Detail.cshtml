@using DanzFloor.Web.Models.ViewModels;
@using DanzFloor.Web.Models.Enum;
@model PedidoViewModel

@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="card z-depth-4">
    <div class="card-header">
        <h2>
            Editar Pedido
        </h2>
        <ul class="actions">
            @if (Model.Instancia == InstanciaPedido.Pendiente ||
                Model.Instancia == InstanciaPedido.GratisEnAprobacion ||
                Model.Instancia == InstanciaPedido.Inicial)
            {
                <li>
                    <a href="/Pedido/Edit/@Model.Id">
                        <i class="zmdi zmdi-edit" style="cursor: pointer;"></i>
                    </a>
                </li>
            }            
            else if (!Model.EsGratis)
            {
                <li>
                    <a href="/Pedido/Create/?pedidoIdBase=@Model.Id">
                        <i class="zmdi zmdi-refresh-alt" style="cursor: pointer;"></i>
                    </a>
                </li>
            }
            @if (Model.Instancia == InstanciaPedido.GratisEnAprobacion && (User.IsInRole(DanzFloor.Web.Models.RoleConst.Administrador) || User.IsInRole(DanzFloor.Web.Models.RoleConst.AutorizadorPedidos)))
            {
                <li>
                    <a pedido-aprobar="@Model.Id" >
                        <i class="zmdi zmdi-check" style="cursor: pointer;"></i>
                    </a>
                    <a pedido-rechazar="@Model.Id">
                        <i class="zmdi zmdi-close" style="cursor: pointer;"></i>
                    </a>
                </li>
             
            }
        </ul>

    </div>

    <div class="card-body card-padding">
        @using (Html.BeginForm("Edit", "Pedido", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">

                <div class="col-sm-6 m-b-25">
                    <p class="f-500 m-b-15 c-black">Cliente</p>

                    <select caller-method-change="/PuntoEntrega/ObtenerPorFiltro" caller-parameter-name="ClienteId"
                            class="chosen" id="ClienteSelected" name="ClienteSelected" style="display: none;" disabled="disabled">
                        <option></option>
                        @foreach (var item in Model.ListaClientes)
                        {
                            <option @(item.Id == Model.ClienteSelected ? @"selected='selected'" : "") value="@item.Id">@item.NombreYRazonSocial</option>
                        }
                    </select>

                    @Html.ValidationMessageFor(model => model.Cliente, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-6 m-b-25">
                    <p class="f-500 m-b-15 c-black">Puntos de Entrega</p>

                    <select caller-method-change="/Cuenta/ObtenerPorFiltro" caller-parameter-name="PuntoEntregaId" caller-control="usuario-cliente" disabled="disabled"
                            class="chosen" punto-entrega-select id="PuntoEntregaSelected" name="PuntoEntregaSelected" style="display: none;">
                        <option></option>
                        @foreach (var item in Model.ListaPuntosEntrega)
                        {
                            <option @(item.Id == Model.PuntoEntregaSelected ? "selected='selected'" : "") value="@item.Id">@item.NombreYDireccion</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.PuntoEntrega, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-6 m-b-25">
                    <p class="f-500 m-b-15 c-black">Usuario Cliente</p>

                    <select class="chosen" id="UsuarioClienteSelected" usuario-cliente name="UsuarioClienteSelected" style="display: none;" disabled="disabled">
                        <option></option>
                        @foreach (var item in Model.ListaUsuariosCliente)
                        {
                            <option @(item.Id == Model.UsuarioClienteSelected ? "selected='selected'" : "") value="@item.Id">@(item.Apellido == null ? item.Nombre : item.NombreYCliente)</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.UsuarioCliente, "", new { @class = "text-danger" })

                </div>

                <div class="col-sm-6 m-b-25">
                    <p class="f-500 m-b-15 c-black">Fecha Programada</p>
                    <div class="fg-line dtp-container">
                        <input type="text" id="FechaProgramada" name="FechaProgramada" class="form-control" value="@Model.FechaProgramada" disabled="disabled">
                        @Html.ValidationMessageFor(model => model.FechaProgramada, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        }


    </div>
</div>

<div class="card z-depth-4">
    <div class="card-header">
        <h2>
            Productos del Pedido
        </h2>
    </div>

    <div class="card-body card-padding">

        <div class="row">
            <div class="table-responsive">

                <table id="data-table-basic-articuloPedidoDetalle" class="table table-striped">
                    <thead>
                        <tr>
                            <th data-column-id="Id" data-visible="false" data-searchable="false">
                                Id
                            </th>
                            <th data-column-id="Articulo">Artículo</th>
                            <th data-column-id="Cantidad">Cantidad</th>
                            @if (Model.EsGratis)
                            {
                            <th data-column-id="ArticuloGratis">Artículo Gratis</th>
                            }
                            else
                            {
                            <th data-column-id="Precio">Precio</th>
                            }
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Model.ArticulosPedido)
                        {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Articulo.Nombre)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Cantidad)
                            </td>
                            @if (Model.EsGratis)
                                {
                                <td>
                                    Sí
                                </td>
                                }
                                else
                                {
                                <td>
                                    @Html.DisplayFor(modelItem => item.Precio)
                                </td>
                                }
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="row">
            @if (Model.ArticulosPedido.Count() > 0 && !Model.EsGratis)
            {
            <div class="col-sm-12 m-b-25 m-t-30">
                <div class="form-group">
                    <div class="fg-line">
                        <p class="f-500 m-b-15 c-black">Monto Total: $@Model.MontoTotal.VistaPrecio()</p>
                    </div>
                </div>
            </div>
            }
        </div>
    </div>
</div>




<div class="modal fade" id="modalWider" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Nuevo Artículo de Pedido</h4>
            </div>
            @Html.Partial("~/Views/ArticuloPedido/PartialCreate.cshtml", new ArticuloPedidoViewModel(Model.Id, Model.Cliente.Id))
        </div>
    </div>
</div>
@foreach (var item in Model.ArticulosPedido)
{
    <div class="modal fade" id="modalWider_@item.Id" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Editar Artículo de Pedido</h4>
                </div>
                @Html.Partial("~/Views/ArticuloPedido/PartialEdit.cshtml", new ArticuloPedidoViewModel(item, Model.Cliente.Id))
            </div>
        </div>
    </div>
}



<script src="~/Scripts/CallerService.js"></script>
<script src="~/Scripts/BootgridArticuloPedido.js"></script>



<script type="text/javascript">

            $('[repetir-pedido]').click(function () {
                var pedidoId = $(this).attr('pedidoId');
                swal({
                    title: "¿Está seguro de repetir el Pedido?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Sí",
                    cancelButtonText: "No",
                    closeOnConfirm: false
                }, function () {

                    $.ajax({
                        dataType: 'json',
                        type: 'GET',
                        url: window.location.origin + '/Pedido/Repetir/' + pedidoId,
                        success: function (result) {
                            swal("¡Excelente!", "El Pedido fue Repetido.", "success");
                            window.location.assign(window.location.origin + "/Pedido/Edit/" + result.Mensaje.id);
                        },
                        error: function (error) {
                            swal("¡Error!", "Ha ocurrido un inconveniente. Intente más tarde.", "error");
                        }
                    });
                });
            });


            $('[pedido-aprobar]').click(function () {
                var pedidoId = $(this).attr('pedido-aprobar');

                swal({
                    title: "¿Está seguro de que desea Aprobar el Pedido?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Sí",
                    cancelButtonText: "No",
                    closeOnConfirm: false
                }, function () {
                    $.ajax({
                        dataType: 'json',
                        type: 'GET',
                        url: window.location.origin + '/Pedido/Aprobar/' + pedidoId,
                        success: function (result) {
                            swal("¡Aprobado!", "El Pedido fue aprobado.", "success");
                            setTimeout(function () {
                                window.location.href = '@Url.Action("Index","Pedido")';
                            }, 2000);
                        },
                        error: function (error) {
                            swal("¡Ups!", "Se ha tenido un inconveniente, contacte a su administrador.", "error");
                        }
                    });
                });
            });

            $('[pedido-rechazar]').click(function () {
                var pedidoId = $(this).attr('pedido-rechazar');

                swal({
                    title: "¿Está seguro de que desea Rechazar el Pedido?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Sí",
                    cancelButtonText: "No",
                    closeOnConfirm: false
                }, function () {
                    $.ajax({
                        dataType: 'json',
                        type: 'GET',
                        url: window.location.origin + '/Pedido/Rechazar/' + pedidoId,
                        success: function (result) {
                            swal("¡Rchazado!", "El Pedido se cambió al estado rechazado.", "success");
                        },
                        error: function (error) {
                            swal("¡Ups!", "Se ha tenido un inconveniente, contacte a su administrador.", "error");
                        }
                    });
                });
            });
</script>
